fragment PostFields on Post{
    id
    title
    content
    published
}
fragment UserIdentities on User{
    id
    email
}
fragment UserFields on User{
    id
    email
    name
  	profile{
      id
      bio
    }
}
fragment ProfileFields on Profile{
    id
    bio
}
  
## Retrieve all published posts and their authors  
query feed {
    feed {
        ...PostFields
        author {
            ...UserIdentities
        }
    }
}

## Search for posts that contain a specific string in their title or content
query feed_search($searchString: String!) {
    feed(
        searchString: $searchString
    ) {
        ...PostFields
        author {
            ...UserIdentities
        }    
    }
}

## Search posts with paginated and ordered results
query feed_paginate(
    $searchString: String,
    $skip: Int,
    $take: Int,
    $orderBy: PostOrderByUpdatedAtInput
) {
    feed(
        searchString: $searchString
        skip: $skip
        take: $take
        orderBy: $orderBy
    ) {
        ...PostFields
        updatedAt
        author {
            ...UserIdentities
        }
    }
}

## Retrieve a single post
query postById($id: Int!) {
    postById(id: $id ) {
        ...PostFields
    	author{
        ...UserIdentities
      }
    }
}  

## Publish/unpublish an existing post
    mutation togglePublishPost($id: Int!) {
        togglePublishPost(id: $id) {
            id
            published
        }
    }

## Increment the view count of a post
    mutation incrementPostViewCount($id: Int!) {
        incrementPostViewCount(id: $id) {
            id
            viewCount
        }
    }  

## Delete a post
mutation deletePost($id: Int!) {
    deletePost(id: $id) {
        id
    }
}

## Retrieve the drafts of a user
query draftsByUser($email: String!) {
    draftsByUser(
        userUniqueInput: {
            email: $email
        }
    ) {
        ...PostFields
        author {
            ...UserIdentities
        }
    }
}

## Create a new draft
mutation createDraft($authorEmail: String!, $title: String!, $content: String!) {
    createDraft(
        data: { title: $title, content: $content }
        authorEmail: $authorEmail
    ) {
        ...PostFields
        author {
            ...UserIdentities
        }
    }
}


## list all users
query allUsers{
    allUsers{
        ...UserIdentities
    }
}

## display a user
query user {
    user(id: 1 ) {
        ...UserFields
    }
}

## Create a new user
mutation signupUser($email: String!, $name: String = "", $password: String = "") {
    signupUser(data: { name: $name, email: $email, password: $password }) {
        ...UserIdentities
    }
}  

## Create a new user with profile
mutation signupUserAndProfile($email: String!, $name: String = "", $password: String!, $bio: String!) {
    signupUser(data: { name: $name, email: $email, password: $password}, bio: $bio) {
        ...UserIdentities
        profile{
            ...ProfileFields
        }
    }
}  

## Add the `Profile` to a user
mutation addProfileForUser($email: String!, $bio: String) {
    addProfileForUser(
        userUniqueInput: {
            email: $email
        }
        bio: $bio
    ) {
        id
        bio
        user {
            ...UserIdentities
        }
    }
}

mutation updateProfileForUser($email: String!, $bio: String!) {
    updateProfileForUser(
        email: $email,
      	bio: $bio
    ) {
        id
    }
}

## variables
{
  "email": "mahmoud@prisma.io",
  "authorEmail": "mahmoud@prisma.io",
  "title": "Join the Prisma Slack", 
  "content": "https://slack.prisma.io"
}