### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  addProfileForUser(bio: String, userUniqueInput: UserUniqueInput!): Profile
  createDraft(authorEmail: String!, data: PostCreateInput!): Post
  deletePost(id: Int!): Post
  incrementPostViewCount(id: Int!): Post
  signupUser(bio: String, data: UserCreateInput!): User!
  togglePublishPost(id: Int!): Post
  updateProfileForUser(bio: String, email: String!): User
  votePost(id: Int!): Post
}

type PageInfo {
  endCursor: Int
  hasMore: Boolean
  totalCount: Int!
}

type Post {
  author: User
  content: String
  createdAt: DateTime!
  databaseId: Int
  id: Int!
  published: Boolean!
  slug: String
  title: String!
  updatedAt: DateTime!
  viewCount: Int
  votes: Int
}

type PostConnection {
  cursor: Int!
  hasMore: Boolean!
  posts: [Post!]!
  totalCount: Int!
}

input PostCreateInput {
  content: String
  title: String!
}

type PostEdge {
  cursor: Int
  node: Post
}

input PostOrderByUpdatedAtInput {
  updatedAt: SortOrder!
}

type PostResponse {
  edges: [PostEdge]
  pageInfo: PageInfo
}

type Profile {
  bio: String
  id: Int!
  user: User
}

type Query {
  draftsByUser(userUniqueInput: UserUniqueInput!): [Post]
  postById(id: Int): Post
  posts(after: Int, orderBy: PostOrderByUpdatedAtInput, searchString: String, skip: Int, take: Int): PostResponse
  user(id: Int): User
  users(after: Int, skip: Int, take: Int): UserConnection
}

enum SortOrder {
  asc
  desc
}

type User {
  email: String!
  id: Int!
  name: String
  posts: [Post!]!
  profile: Profile
}

type UserConnection {
  cursor: Int!
  hasMore: Boolean!
  totalCount: Int!
  users: [User!]!
}

input UserCreateInput {
  email: String!
  name: String
  password: String!
  posts: [PostCreateInput!]
}

input UserUniqueInput {
  email: String
  id: Int
}
